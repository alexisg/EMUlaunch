//ARRAY SHIT//configarray = new Array();//configarray = [false, false, false, true, false, false, false, true, false, true, false, false, false, false, false];//BITMAP SMOOTHER//============================import flash.display.*;function loadBitmapSmoothed(url:String, target:MovieClip) {    // Create a movie clip which will contain our     // unsmoothed bitmap    var bmc:MovieClip = target.createEmptyMovieClip(        "bmc",        target.getNextHighestDepth());    // Create a listener which will notify us when     // the bitmap loaded successfully    var listener:Object = new Object();    // Track the target    listener.tmc = target;     // If the bitmap loaded successfully we redraw the     // movie into a BitmapData object and then attach     // that BitmapData to the target movie clip with     // the smoothing flag turned on.    listener.onLoadInit = function(mc:MovieClip) {        mc._visible = false;/*        var bitmap:BitmapData = new BitmapData(            mc._width,             mc._height,             true);*/				var bitmap:BitmapData = new BitmapData(mc._width, mc._height, true, 0x000000);         this.tmc.attachBitmap(            bitmap,             this.tmc.getNextHighestDepth(),            "auto",             true);         bitmap.draw(mc);    };     // Do it, load the bitmap now    var loader:MovieClipLoader = new MovieClipLoader();    loader.addListener(listener);    loader.loadClip(url, bmc);}function builddockarray() {		_global.configarray = new Array();		for (a=0; a<(maxconsoles); a++) {		if (game_xml.childNodes[a].attributes.active == "true") {			//mApplication.trace(game_xml.childNodes[a].attributes.active);			_global.configarray.push("true");		} else {			_global.configarray.push("false");		}	}	//mApplication.trace(configarray);		_global.dockarray = new Array();		for (p=1; p<(maxconsoles+1); p++) {		dock_mc["launch"+p+"_mc"].removeMovieClip();		//mApplication.trace(configarray[p]);		if (configarray[p-1] == "true") {			_global.dockarray.push(p);			dock_mc.createEmptyMovieClip("launch"+p+"_mc", p+20000);			dock_mc["launch"+p+"_mc"].createEmptyMovieClip("pichold",1);						//Need to create transparent box for button since pic won't register as hit area			//Also needed to create a holder so it would not go on top of the created hit area						if (usedock == "true") {						dock_mc["launch"+p+"_mc"].lineStyle(1, 0x000000, 0);			dock_mc["launch"+p+"_mc"].beginFill(0x000000, 0);			dock_mc["launch"+p+"_mc"].moveTo(0, 0);			dock_mc["launch"+p+"_mc"].lineTo(102, 0);			dock_mc["launch"+p+"_mc"].lineTo(102, 72);			dock_mc["launch"+p+"_mc"].lineTo(0, 72);			dock_mc["launch"+p+"_mc"].endFill(0, 0);			dock_mc["launch"+p+"_mc"]._x = 212;			dock_mc["launch"+p+"_mc"]._y = 0;			dock_mc["launch"+p+"_mc"]._alpha = 0;						}					}	}				//mApplication.trace(dockarray);	dock_mc.attachMovie("arrow","arrow_mc", 30000);	dock_mc.arrow_mc._x = 212;	dock_mc.arrow_mc._alpha = 0;			if (usedock == "true") {	dock_mc.arrow_mc._alpha = 100;//	dock_mc.arrow_mc._alpha = 100;//	dock_mc.arrow_mc.tween("_alpha", 100, .75, "easeInOutSine", 1);	/*dock_mc.launch1_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_atari.png");	dock_mc.launch2_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_5200.png");	dock_mc.launch3_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_coleco.png");	dock_mc.launch4_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_nes.png");	dock_mc.launch5_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_master.png");	dock_mc.launch6_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_tg16.png");	dock_mc.launch7_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_gameboy.png");	dock_mc.launch8_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_genesis.png");	dock_mc.launch9_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_lynx.png");	dock_mc.launch10_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_snes.png");	dock_mc.launch11_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_vb.png");	dock_mc.launch12_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_ps.png");	dock_mc.launch13_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_n64.png");	dock_mc.launch14_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_gba.png");	dock_mc.launch15_mc.pichold.loadMovie(mApplication.getWorkingDirectory() + "/btns_mame.png");*/		loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_atari.png",dock_mc.launch1_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_5200.png",dock_mc.launch2_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_coleco.png",dock_mc.launch3_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_nes.png",dock_mc.launch4_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_master.png",dock_mc.launch5_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_tg16.png",dock_mc.launch6_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_gameboy.png",dock_mc.launch7_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_genesis.png",dock_mc.launch8_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_lynx.png",dock_mc.launch9_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_snes.png",dock_mc.launch10_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_vb.png",dock_mc.launch11_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_ps.png",dock_mc.launch12_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_n64.png",dock_mc.launch13_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_gba.png",dock_mc.launch14_mc.pichold);	loadBitmapSmoothed(mApplication.getWorkingDirectory() + "/btns_mame.png",dock_mc.launch15_mc.pichold);			dock_mc.launch1_mc.onRelease = function() { _global.lastpick = pick; launchconsole(1); }	dock_mc.launch2_mc.onRelease = function() { _global.lastpick = pick; launchconsole(2); }	dock_mc.launch3_mc.onRelease = function() { _global.lastpick = pick; launchconsole(3); }	dock_mc.launch4_mc.onRelease = function() { _global.lastpick = pick; launchconsole(4); }	dock_mc.launch5_mc.onRelease = function() { _global.lastpick = pick; launchconsole(5); }	dock_mc.launch6_mc.onRelease = function() { _global.lastpick = pick; launchconsole(6); }	dock_mc.launch7_mc.onRelease = function() { _global.lastpick = pick; launchconsole(7); }	dock_mc.launch8_mc.onRelease = function() { _global.lastpick = pick; launchconsole(8); }	dock_mc.launch9_mc.onRelease = function() { _global.lastpick = pick; launchconsole(9); }	dock_mc.launch10_mc.onRelease = function() { _global.lastpick = pick; launchconsole(10); }	dock_mc.launch11_mc.onRelease = function() { _global.lastpick = pick; launchconsole(11); }	dock_mc.launch12_mc.onRelease = function() { _global.lastpick = pick; launchconsole(12); }	dock_mc.launch13_mc.onRelease = function() { _global.lastpick = pick; launchconsole(13); }	dock_mc.launch14_mc.onRelease = function() { _global.lastpick = pick; launchconsole(14); }	dock_mc.launch15_mc.onRelease = function() { _global.lastpick = pick; launchconsole(15); }		}		if (dockarray.length == 1) {		dock_mc._visible = false;		dock_mc.arrow_mc._visible = false;		//dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 212, .75, "easeInOutSine",0 ,loadbgpic);		//dock_mc["launch"+dockarray[0]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");	} else if (dockarray.length == 2)  {			dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 159, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_x", 265, .75, "easeInOutSine");		dock_mc["launch"+dockarray[0]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");	}  else if (dockarray.length == 3)  {			dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 106, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_x", 212, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_x", 318, .75, "easeInOutSine");		dock_mc["launch"+dockarray[0]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");					} else if (dockarray.length == 4)  {			dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 53, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_x", 159, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_x", 265, .75, "easeInOutSine");		dock_mc["launch"+dockarray[3]+"_mc"].tween("_x", 371, .75, "easeInOutSine");				dock_mc["launch"+dockarray[0]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[3]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");					} else if (dockarray.length == 5)  {					dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 0, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_x", 106, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_x", 212, .75, "easeInOutSine");		dock_mc["launch"+dockarray[3]+"_mc"].tween("_x", 318, .75, "easeInOutSine");		dock_mc["launch"+dockarray[4]+"_mc"].tween("_x", 424, .75, "easeInOutSine");				dock_mc["launch"+dockarray[0]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[1]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[3]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		dock_mc["launch"+dockarray[4]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine");		} 		}//BUTTONPICKfunction buttonpick() {		function buttonshifter() {		if (dockarray.length == 1)  {		loadbgpic();	}else if (dockarray.length == 2)  {			if (pick == dockarray[0]) {			dock_mc.arrow_mc.tween("_x", 159, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[1]) {			dock_mc.arrow_mc.tween("_x", 265, .75, "easeInOutSine",0 ,loadbgpic);		}			}  else if (dockarray.length == 3)  {			if (pick == dockarray[0]) {			dock_mc.arrow_mc.tween("_x", 106, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[1]) {			dock_mc.arrow_mc.tween("_x", 212, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[2]) {			dock_mc.arrow_mc.tween("_x", 318, .75, "easeInOutSine",0 ,loadbgpic);		}			} else if (dockarray.length == 4)  {			if (pick == dockarray[0]) {			dock_mc.arrow_mc.tween("_x", 53, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[1]) {			dock_mc.arrow_mc.tween("_x", 159, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[2]) {			dock_mc.arrow_mc.tween("_x", 265, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[3]) {			dock_mc.arrow_mc.tween("_x", 371, .75, "easeInOutSine",0 ,loadbgpic);		}			} else if (dockarray.length == 5)  {					if (pick == dockarray[0]) {			dock_mc.arrow_mc.tween("_x", 0, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[1]) {			dock_mc.arrow_mc.tween("_x", 106, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[2]) {			dock_mc.arrow_mc.tween("_x", 212, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[3]) {			dock_mc.arrow_mc.tween("_x", 318, .75, "easeInOutSine",0 ,loadbgpic);		} else if (pick == dockarray[4]) {			dock_mc.arrow_mc.tween("_x", 424, .75, "easeInOutSine",0 ,loadbgpic);		}			} else {			for (p=0; p<(dockarray.length); p++) {			if (p<5) {				dock_mc["launch"+dockarray[p]+"_mc"].tween("_alpha", 100, .75, "easeInOutSine", 0);				dock_mc["launch"+dockarray[p]+"_mc"].tween("_y", 0, .75, "easeInOutSine", 0);			} else {				dock_mc["launch"+dockarray[p]+"_mc"].tween("_y", 0, .75, "easeInOutSine", 0);				dock_mc["launch"+dockarray[p]+"_mc"].tween("_alpha", 0, .75, "easeInOutSine", 0);			}		}		dock_mc["launch"+dockarray[0]+"_mc"].tween("_x", 0, .75, "easeInOutSine", 0 ,loadbgpic);		dock_mc["launch"+dockarray[1]+"_mc"].tween("_x", 106, .75, "easeInOutSine");		dock_mc["launch"+dockarray[2]+"_mc"].tween("_x", 212, .75, "easeInOutSine");		dock_mc["launch"+dockarray[3]+"_mc"].tween("_x", 318, .75, "easeInOutSine");		dock_mc["launch"+dockarray[4]+"_mc"].tween("_x", 424, .75, "easeInOutSine");		}	}		function dockarrayshifter() {		if (dockarray.length < 6) {			buttonshifter();		}else {				for (p=0; p<(dockarray.length); p++) {			if (pick == dockarray[2]) {			buttonshifter();			} else {			var arraypop = dockarray.pop();			_global.dockarray.unshift(arraypop);			}		}		}	}	dockarrayshifter();	}